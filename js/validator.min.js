class Validator{constructor(t){this.form=t,t.setAttribute("novalidate",!0)}inputEmptyValidator(t){this.formValid=!0;try{const t=this.form;if(!t)throw new Error("ورودی تابع نادرست می باشد!");t.addEventListener("submit",this.formSubmit);let e=[...t].filter(t=>"INPUT"==t.tagName&&t.hasAttribute("required"));e&&e.forEach(t=>{t.addEventListener("change",this.inputOnChange);let e=document.createElement("span");e.style.color="#d40000",e.id=`${t.id}Error`,t.parentNode.appendChild(e)})}catch{throw new Error("مشکلی به وجود آمده است لطفا ورودی تابع را بررسی کنید!")}}formSubmit(t){let e=[...t.target];e=e.filter(t=>"INPUT"==t.tagName&&t.hasAttribute("required")),e.forEach(e=>{let r=document.getElementById(`${e.id}Error`);if(""==e.value){this.formValid=!1;let[n]=e.labels;t.preventDefault(),r.innerHTML=`عنوان ${n.textContent} الزامی میباشد.`}else r.innerHTML=""})}inputOnChange(t){let e=t.target,r=document.getElementById(`${e.id}Error`);""==e.value?r.innerHTML=`عنوان ${e.labels[0].textContent} الزامی میباشد.`:r.innerHTML=""}}